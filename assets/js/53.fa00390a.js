(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{285:function(t,a,v){"use strict";v.r(a);var s=v(11),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"java-虚拟机"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java-虚拟机"}},[t._v("#")]),t._v(" Java 虚拟机")]),t._v(" "),v("blockquote",[v("p",[t._v("Java 虚拟机 记录了 JVM 的基本机制。")])]),t._v(" "),v("h2",{attrs:{id:"内容"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#内容"}},[t._v("#")]),t._v(" 内容")]),t._v(" "),v("ul",[v("li",[v("RouterLink",{attrs:{to:"/jvm/jvm-memory.html"}},[t._v("JVM 内存区域")])],1),t._v(" "),v("li",[v("RouterLink",{attrs:{to:"/jvm/jvm-gc.html"}},[t._v("JVM 垃圾收集")])],1),t._v(" "),v("li",[v("RouterLink",{attrs:{to:"/jvm/jvm-bytecode.html"}},[t._v("JVM 字节码")])],1),t._v(" "),v("li",[v("RouterLink",{attrs:{to:"/jvm/jvm-class-loader.html"}},[t._v("JVM 类加载")])],1),t._v(" "),v("li",[v("RouterLink",{attrs:{to:"/jvm/jvm-tools.html"}},[t._v("JVM 工具")])],1),t._v(" "),v("li",[v("RouterLink",{attrs:{to:"/jvm/jvm-action.html"}},[t._v("JVM 实战")])],1)]),t._v(" "),v("h2",{attrs:{id:"java-虚拟机架构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java-虚拟机架构"}},[t._v("#")]),t._v(" Java 虚拟机架构")]),t._v(" "),v("h3",{attrs:{id:"hotspot-架构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#hotspot-架构"}},[t._v("#")]),t._v(" Hotspot 架构")]),t._v(" "),v("p",[t._v("Java 虚拟机的主要组件，包括"),v("strong",[t._v("类加载器")]),t._v("、"),v("strong",[t._v("运行时数据区")]),t._v("和"),v("strong",[t._v("执行引擎")]),t._v("。")]),t._v(" "),v("p",[t._v("Hotspot 虚拟机拥有一个架构，它支持强大特性和能力的基础平台，支持实现高性能和强大的可伸缩性的能力。举个例子，Hotspot 虚拟机 JIT 编译器生成动态的优化，换句话说，它们在 Java 应用执行期做出优化，为底层系统架构生成高性能的本地机器指令。另外，经过它的运行时环境和多线程垃圾回收成熟的进化和连续的设计， Hotspot 虚拟机在高可用计算系统上产出了高伸缩性。")]),t._v(" "),v("div",{attrs:{align:"center"}},[v("img",{attrs:{src:"http://dunwu.test.upcdn.net/cs/java/javacore/jvm/jvm-hotspot-architecture.png"}})]),t._v(" "),v("h3",{attrs:{id:"hotspot-关键组件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#hotspot-关键组件"}},[t._v("#")]),t._v(" Hotspot 关键组件")]),t._v(" "),v("p",[t._v("Java 虚拟机有三个组件关注着什么时候进行性能优化，堆空间是对象所存储的地方，这个区域被启动时选择的垃圾回收器管理，大部分调优选项与调整堆大小和根据你的情况选择最适当的垃圾收集器相关。即时编译器对性能也有很大的影响，但是使用新版本的 Java 虚拟机时很少需要调整。")]),t._v(" "),v("div",{attrs:{align:"center"}},[v("img",{attrs:{src:"http://dunwu.test.upcdn.net/cs/java/javacore/jvm/jvm-hotspot-key-components.png"}})]),t._v(" "),v("h3",{attrs:{id:"性能指标"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#性能指标"}},[t._v("#")]),t._v(" 性能指标")]),t._v(" "),v("p",[t._v("Java 虚拟机的性能指标主要有两点：")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("停顿时间")]),t._v(" - 响应延迟是指一个应用回应一个请求的速度有多快。对关注响应能力的应用来说，长暂停时间是不可接受的，重点是在短的时间周期内能做出响应。\n"),v("ul",[v("li",[t._v("桌面 UI 响应事件的速度")]),t._v(" "),v("li",[t._v("网站返回网页的速度")]),t._v(" "),v("li",[t._v("数据查询返回的速度")])])]),t._v(" "),v("li",[v("strong",[t._v("吞吐量")]),t._v(" - 吞吐量关注在特定的时间周期内一个应用的工作量的最大值。对关注吞吐量的应用来说长暂停时间是可以接受的。由于高吞吐量的应用关注的基准在更长周期时间上，所以快速响应时间不在考虑之内。\n"),v("ul",[v("li",[t._v("给定时间内完成事务的数量")]),t._v(" "),v("li",[t._v("一小时内批处理程序完成的工作数量")]),t._v(" "),v("li",[t._v("一小时内数据查询完成的数量")])])])])])}),[],!1,null,null,null);a.default=r.exports}}]);